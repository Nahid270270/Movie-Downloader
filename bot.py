import os
import requests
from flask import Flask, request
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes

# Environment Variables ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø
BOT_TOKEN = os.getenv("BOT_TOKEN")
SHORTENER_API_BASE_URL = os.getenv("SHORTENER_API_BASE_URL")  # ‡¶Ø‡ßá‡¶Æ‡¶®: https://api.shortener.com
SHORTENER_API_KEY = os.getenv("SHORTENER_API_KEY")            # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ API key

# Flask ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™
flask_app = Flask(__name__)

# Telegram ‡¶¨‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶®
application = Application.builder().token(BOT_TOKEN).build()

# ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∂‡¶∞‡ßç‡¶ü‡ßá‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def shorten_link(original_url):
    try:
        api_url = f"{SHORTENER_API_BASE_URL}/{SHORTENER_API_KEY}?s={original_url}"
        response = requests.get(api_url)
        return response.text.strip()
    except Exception as e:
        return f"Error shortening link: {e}"

# /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã Movie Bot ‡¶è ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ!\n\n"
        "üîç /search <‡¶Æ‡ßÅ‡¶≠‡¶ø‡¶∞ ‡¶®‡¶æ‡¶Æ>\n"
        "üî• /latest ‚Äì ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®"
    )

# /latest ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async def latest(update: Update, context: ContextTypes.DEFAULT_TYPE):
    movie_name = "The Beekeeper (2024)"
    movie_url = "https://samplemoviesite.com/beekeeper"  # ‡¶Ü‡¶∏‡¶≤ ‡¶Æ‡ßÅ‡¶≠‡¶ø URL ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¨‡¶∏‡¶æ‡¶¨‡ßá‡¶®
    short_url = shorten_link(movie_url)

    buttons = [[InlineKeyboardButton("‚¨áÔ∏è Download Now", url=short_url)]]

    await update.message.reply_text(
        f"üé¨ {movie_name}\n‚≠ê 7.1/10\n‚¨áÔ∏è Watch or Download ‡¶®‡¶ø‡¶ö‡ßá:",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

# ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("latest", latest))

# Telegram webhook route
@flask_app.post(f"/{BOT_TOKEN}")
async def webhook():
    data = request.get_json(force=True)
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return "ok"

# ‡¶π‡ßã‡¶Æ ‡¶™‡ßá‡¶ú
@flask_app.route("/")
def home():
    return "Movie Bot is Running"

# ‡¶∞‡¶æ‡¶®‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
if __name__ == "__main__":
    import asyncio
    PORT = int(os.environ.get("PORT", 5000))
    WEBHOOK_URL = f"https://movie-downloader-21cp.onrender.com/"8124429702:AAGN2Wk9_R3F_tgArbgsJRj5M3u4HRjs6nE"  # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Render URL ‡¶ì ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®

    async def main():
        await application.bot.set_webhook(WEBHOOK_URL)
        flask_app.run(host="0.0.0.0", port=PORT)

    asyncio.run(main())

import asyncio
from pyrogram import Client, filters
from pyrogram.errors import PeerIdInvalid
from pyrogram.types import Message

# ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Telegram API credentials (https://my.telegram.org)
API_ID = 1234567  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ API ID
API_HASH = "your_api_hash_here"  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ API HASH

# ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßá‡¶∂‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç (Pyrogram user session string)
SESSION_STRING = "your_user_session_string_here"

# ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø (‡¶á‡¶®‡¶ü‡¶ø‡¶ú‡¶æ‡¶∞ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá, -100 ‡¶¶‡¶ø‡ßü‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá)
SOURCE_CHANNEL = -1002653036072  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø

# Auto delete time in seconds
AUTO_DELETE_TIME = 300  # ‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü

app = Client(session_name=SESSION_STRING, api_id=API_ID, api_hash=API_HASH)


@app.on_message(filters.private | filters.group & filters.text)
async def search_movie(client: Client, message: Message):
    query = message.text.strip()
    if not query:
        return await message.reply_text("‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Æ‡ßÅ‡¶≠‡¶ø‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§")

    try:
        results = []
        async for msg in client.search_messages(SOURCE_CHANNEL, query=query, limit=5):
            # ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶®‡¶æ‡¶Æ ‡¶ì ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶ü‡¶æ ‡¶®‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶Ø‡¶¶‡¶ø ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá ‡¶•‡¶æ‡¶ï‡ßá
            results.append(msg)

        if not results:
            await message.reply_text("‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶®‡ßá‡•§")
            return

        for msg in results:
            sent_msg = await message.reply_text(f"üîç ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá:\n\n{msg.text or 'No text content'}")
            # ‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßã
            await asyncio.sleep(AUTO_DELETE_TIME)
            await sent_msg.delete()

    except PeerIdInvalid:
        await message.reply_text("‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶Ø‡¶º ‡¶¨‡¶æ ‡¶¨‡¶ü/‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßá‡¶á ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡¶ü‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶™‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§")
    except Exception as e:
        await message.reply_text(f"‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá: {e}")


if __name__ == "__main__":
    print("Bot is starting...")
    app.run()
